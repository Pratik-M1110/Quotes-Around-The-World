{"ast":null,"code":"var _jsxFileName = \"/home/pratik/Hackathon 2/client/demo/src/Quotes.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport QuoteRow from \"./QuoteRow\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quotes() {\n  _s();\n  const [quotes, setquotes] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    console.log(\"Inside COmponent Did Mount\");\n    selectQuotes();\n  }, []);\n  const selectQuotes = () => {\n    var helper = new XMLHttpRequest();\n    helper.onreadystatechange = () => {\n      if (helper.readyState == 4 && helper.status == 200) {\n        debugger;\n        var result = JSON.parse(helper.responseText);\n        var receivedQuotes = result;\n        // console.log(\"Setting Emps to Array received from reqres.in website..\");\n        setquotes(receivedQuotes);\n      }\n    };\n    helper.open(\"GET\", \"http://127.0.0.1:9999/quotes\");\n    helper.send();\n  };\n  const getQuots = () => {\n    debugger;\n    var helper = new XMLHttpRequest();\n    helper.onreadystatechange = () => {\n      if (helper.readyState == 4 && helper.status == 200) {\n        debugger;\n        history.push(\"/tutorials\");\n      }\n    };\n    helper.open(\"GET\", \"http://127.0.0.1:9999/quotes\");\n    helper.setRequestHeader(\"Content-Type\", \"application/json\");\n    helper.send(JSON.stringify(quotes));\n  };\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered myTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"center\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Quotes Around the World\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sr.No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: quotes.map(quote => {\n            debugger;\n            {\n              return /*#__PURE__*/_jsxDEV(QuoteRow, {\n                quote: quote,\n                getQuotes: selectQuotes\n              }, quote.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 36\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 13\n  }, this);\n}\n_s(Quotes, \"ESmx2r7hfS/nAeDmn2SanArs3BU=\", false, function () {\n  return [useHistory];\n});\n_c = Quotes;\nexport default Quotes;\nvar _c;\n$RefreshReg$(_c, \"Quotes\");","map":{"version":3,"names":["useState","useEffect","QuoteRow","useHistory","jsxDEV","_jsxDEV","Quotes","_s","quotes","setquotes","history","console","log","selectQuotes","helper","XMLHttpRequest","onreadystatechange","readyState","status","result","JSON","parse","responseText","receivedQuotes","open","send","getQuots","push","setRequestHeader","stringify","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","quote","getQuotes","id","_c","$RefreshReg$"],"sources":["/home/pratik/Hackathon 2/client/demo/src/Quotes.js"],"sourcesContent":["import { useState ,useEffect} from \"react\";\nimport QuoteRow from \"./QuoteRow\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Quotes() {\n\n    const [quotes, setquotes] = useState([]);\n    const history = useHistory();\n\n    useEffect(()=>{\n        console.log(\"Inside COmponent Did Mount\");\n        selectQuotes();\n    }, [])\n\n    const selectQuotes = () => {\n        var helper = new XMLHttpRequest();\n        helper.onreadystatechange = () => {\n            if (helper.readyState == 4 && helper.status == 200) \n            {\n                debugger;\n                var result = JSON.parse(helper.responseText);\n                var receivedQuotes = result;\n                // console.log(\"Setting Emps to Array received from reqres.in website..\");\n                setquotes(receivedQuotes);\n            }\n        };\n        helper.open(\"GET\",\"http://127.0.0.1:9999/quotes\");\n        helper.send();\n    }\n\n    const getQuots=()=>\n    {\n        debugger;\n        var helper = new XMLHttpRequest();\n        helper.onreadystatechange = () => {\n            if (helper.readyState == 4 && helper.status == 200) {\n                debugger;\n                history.push(\"/tutorials\");\n            }\n        };\n        helper.open(\"GET\", \"http://127.0.0.1:9999/quotes\");\n        helper.setRequestHeader(\"Content-Type\", \"application/json\")\n        helper.send(JSON.stringify(quotes));\n    }\n\n    return (<center>\n            <div>\n            <table className='table table-bordered myTable'>\n            <thead>\n                  <center> <h2>Quotes Around the World</h2></center>\n            </thead>\n            <tr>\n            <th>Sr.No</th>\n            <th>Quote</th>\n            <th>Author</th>\n            </tr>\n            <tbody>\n                \n                {\n                    quotes.map((quote) => {\n                            debugger;\n                        {\n                            return <QuoteRow\n                                key={quote.id}\n                                quote={quote}\n                                getQuotes={selectQuotes}\n                                 />;\n                        }\n                    })\n                }\n            </tbody>\n        </table>\n    </div>\n    </center>);\n}\nexport default Quotes;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}