{"ast":null,"code":"var _jsxFileName = \"/home/pratik/Hackathon 2/client/demo/src/QuoteRow.js\";\nimport './common.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuoteRow(props) {\n  var _s = $RefreshSig$();\n  const HeartCheckbox = () => {\n    _s();\n    const [checked, setChecked] = useState(false);\n    const handleCheckboxChange = () => {\n      setChecked(!checked);\n    };\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        width: true,\n        children: props.quote.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: props.quote.quote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: props.quote.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"heart-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: checked,\n            onChange: handleCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"heart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  };\n  _s(HeartCheckbox, \"OiiR1BYWvMsLHMiD2uYkeM3TCO0=\");\n}\n_c = QuoteRow;\nexport default QuoteRow;\nvar _c;\n$RefreshReg$(_c, \"QuoteRow\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","QuoteRow","props","_s","$RefreshSig$","HeartCheckbox","checked","setChecked","useState","handleCheckboxChange","children","width","quote","id","fileName","_jsxFileName","lineNumber","columnNumber","author","className","type","onChange","_c","$RefreshReg$"],"sources":["/home/pratik/Hackathon 2/client/demo/src/QuoteRow.js"],"sourcesContent":["import './common.css';\n\nfunction QuoteRow(props)\n{\n    const HeartCheckbox = () => {\n        const [checked, setChecked] = useState(false);\n      \n        const handleCheckboxChange = () => {\n          setChecked(!checked);\n        };\n      \n\n\n\n    return <tr>\n                    <td width>\n                        {props.quote.id}\n                    </td>\n                    <td>\n                        {props.quote.quote}\n                    </td>\n                    <td>\n                        {props.quote.author}\n                    </td>\n                    <td>\n                    <label className=\"heart-checkbox\">\n                    <input\n                        type=\"checkbox\"\n                        checked={checked}\n                        onChange={handleCheckboxChange}\n                    />\n                    <span className=\"heart\" />\n                    </label>\n                                    </td>\n                        </tr>\n}\n}\nexport default QuoteRow;"],"mappings":";AAAA,OAAO,cAAc;AAAC,SAAAA,MAAA,IAAAC,OAAA;AAEtB,SAASC,QAAQA,CAACC,KAAK,EACvB;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACI,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAAAF,EAAA;IACxB,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;IAE7C,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;MACjCF,UAAU,CAAC,CAACD,OAAO,CAAC;IACtB,CAAC;IAKL,oBAAON,OAAA;MAAAU,QAAA,gBACSV,OAAA;QAAIW,KAAK;QAAAD,QAAA,EACJR,KAAK,CAACU,KAAK,CAACC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,eACLjB,OAAA;QAAAU,QAAA,EACKR,KAAK,CAACU,KAAK,CAACA;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eACLjB,OAAA;QAAAU,QAAA,EACKR,KAAK,CAACU,KAAK,CAACM;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eACLjB,OAAA;QAAAU,QAAA,eACAV,OAAA;UAAOmB,SAAS,EAAC,gBAAgB;UAAAT,QAAA,gBACjCV,OAAA;YACIoB,IAAI,EAAC,UAAU;YACfd,OAAO,EAAEA,OAAQ;YACjBe,QAAQ,EAAEZ;UAAqB;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC,eACFjB,OAAA;YAAMmB,SAAS,EAAC;UAAO;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAC7B,CAAC;EAAAd,EAAA,CA/BSE,aAAa;AAgCvB;AAACiB,EAAA,GAlCQrB,QAAQ;AAmCjB,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}