{"ast":null,"code":"var _jsxFileName = \"/home/pratik/Hackathon 2/client/demo/src/Myquotes.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Myquotes() {\n  _s();\n  const UserId = sessionStorage.getItem(\"Id\");\n  const [Myquotes, setMyquotes] = useState([]);\n  const getUser = () => {\n    var helper = new XMLHttpRequest();\n    helper.onreadystatechange = () => {\n      if (helper.readyState == 4 && helper.status == 200) {\n        debugger;\n        var result = JSON.parse(helper.responseText);\n        var receivedUser = result;\n        // console.log(\"Setting Emps to Array received from reqres.in website..\");\n        setTutorial(receivedTutorial);\n      }\n    };\n    helper.open(\"GET\", `http://127.0.0.1:7000/users/${id}`);\n    helper.send();\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered myTable\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Myquotes.map(Myquote => {\n          debugger;\n          {\n            return /*#__PURE__*/_jsxDEV(MyQuoteRow, {\n              quote: quote,\n              getQuotes: selectQuotes\n            }, quote.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 36\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(Myquotes, \"CzIU78SnNfSh1t4WGpyADpf21ms=\");\n_c = Myquotes;\nexport default Myquotes;\nvar _c;\n$RefreshReg$(_c, \"Myquotes\");","map":{"version":3,"names":["Myquotes","_s","UserId","sessionStorage","getItem","setMyquotes","useState","getUser","helper","XMLHttpRequest","onreadystatechange","readyState","status","result","JSON","parse","responseText","receivedUser","setTutorial","receivedTutorial","open","id","send","_jsxDEV","children","className","map","Myquote","MyQuoteRow","quote","getQuotes","selectQuotes","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/pratik/Hackathon 2/client/demo/src/Myquotes.js"],"sourcesContent":["function Myquotes() {\n    const UserId=sessionStorage.getItem(\"Id\");\n    const [Myquotes, setMyquotes] = useState([]);\n\n    const getUser=()=>\n    {\n        var helper = new XMLHttpRequest();\n        helper.onreadystatechange = () => {\n            if (helper.readyState == 4 &&\n                helper.status == 200) {\n                debugger;\n                var result = JSON.parse(helper.responseText);\n                var receivedUser = result;\n                // console.log(\"Setting Emps to Array received from reqres.in website..\");\n                setTutorial(receivedTutorial);\n            }\n        };\n        helper.open(\"GET\", `http://127.0.0.1:7000/users/${id}`);\n        helper.send();\n    }\n\n    return (\n        <table>\n            <table className='table table-bordered myTable'>\n            <tbody>\n                {\n                    Myquotes.map((Myquote) => {\n                            debugger;\n                        {\n                            return <MyQuoteRow\n                                key={quote.id}\n                                quote={quote}\n                                getQuotes={selectQuotes}\n                                 />;\n                        }\n                    })\n                }\n            </tbody>\n        </table>\n        </table>\n     );\n}\n\nexport default Myquotes;"],"mappings":";;;AAAA,SAASA,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,MAAM,GAACC,cAAc,CAACC,OAAO,CAAC,IAAI,CAAC;EACzC,MAAM,CAACJ,QAAQ,EAAEK,WAAW,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMC,OAAO,GAACA,CAAA,KACd;IACI,IAAIC,MAAM,GAAG,IAAIC,cAAc,CAAC,CAAC;IACjCD,MAAM,CAACE,kBAAkB,GAAG,MAAM;MAC9B,IAAIF,MAAM,CAACG,UAAU,IAAI,CAAC,IACtBH,MAAM,CAACI,MAAM,IAAI,GAAG,EAAE;QACtB;QACA,IAAIC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACP,MAAM,CAACQ,YAAY,CAAC;QAC5C,IAAIC,YAAY,GAAGJ,MAAM;QACzB;QACAK,WAAW,CAACC,gBAAgB,CAAC;MACjC;IACJ,CAAC;IACDX,MAAM,CAACY,IAAI,CAAC,KAAK,EAAG,+BAA8BC,EAAG,EAAC,CAAC;IACvDb,MAAM,CAACc,IAAI,CAAC,CAAC;EACjB,CAAC;EAED,oBACIC,OAAA;IAAAC,QAAA,eACID,OAAA;MAAOE,SAAS,EAAC,8BAA8B;MAAAD,QAAA,eAC/CD,OAAA;QAAAC,QAAA,EAEQxB,QAAQ,CAAC0B,GAAG,CAAEC,OAAO,IAAK;UAClB;UACJ;YACI,oBAAOJ,OAAA,CAACK,UAAU;cAEdC,KAAK,EAAEA,KAAM;cACbC,SAAS,EAAEC;YAAa,GAFnBF,KAAK,CAACR,EAAE;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGX,CAAC;UACX;QACJ,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEhB;AAAClC,EAAA,CAzCQD,QAAQ;AAAAoC,EAAA,GAARpC,QAAQ;AA2CjB,eAAeA,QAAQ;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}