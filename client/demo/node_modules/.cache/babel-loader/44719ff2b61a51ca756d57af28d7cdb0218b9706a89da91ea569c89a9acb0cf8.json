{"ast":null,"code":"var _jsxFileName = \"/home/pratik/Hackathon 2/client/demo/src/profile.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport MyQuoteRow from \"./MyquoteRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyProfile() {\n  _s();\n  const UserId = sessionStorage.getItem(\"id\");\n  useEffect(() => {\n    profile();\n  }, []);\n  const profile = () => {\n    debugger;\n    var helper = new XMLHttpRequest();\n    helper.onreadystatechange = () => {\n      if (helper.readyState == 4 && helper.status == 200) {\n        debugger;\n        var result = JSON.parse(helper.responseText);\n\n        // setMyquotes(result);\n      }\n    };\n\n    helper.open(\"GET\", `http://127.0.0.1:9999/quotes/${UserId}`);\n    helper.send();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mytable\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        name: \"Eno\",\n        placeholder: \"Enter Eno\",\n        value: props.emp.Eno,\n        onChange: props.OntextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"Eno\",\n        placeholder: \"Enter Eno\",\n        value: props.emp.Ename,\n        onChange: props.OntextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"Eaddress\",\n        placeholder: \"Enter Eno\",\n        value: props.emp.Eaddress,\n        onChange: props.OntextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.insert,\n      className: \"btn btn-success\",\n      children: \"AddRecord\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        margin: 5\n      },\n      onClick: props.update,\n      className: \"btn btn-info\",\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n}\n_s(MyProfile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MyProfile;\nexport default MyProfile;\nvar _c;\n$RefreshReg$(_c, \"MyProfile\");","map":{"version":3,"names":["useState","useEffect","MyQuoteRow","jsxDEV","_jsxDEV","MyProfile","_s","UserId","sessionStorage","getItem","profile","helper","XMLHttpRequest","onreadystatechange","readyState","status","result","JSON","parse","responseText","open","send","className","children","type","name","placeholder","value","props","emp","Eno","onChange","OntextChange","fileName","_jsxFileName","lineNumber","columnNumber","Ename","Eaddress","onClick","insert","style","margin","update","_c","$RefreshReg$"],"sources":["/home/pratik/Hackathon 2/client/demo/src/profile.js"],"sourcesContent":["import { useState,useEffect } from \"react\";\nimport MyQuoteRow from \"./MyquoteRow\";\nfunction MyProfile() {\n    const UserId=sessionStorage.getItem(\"id\");\n    useEffect(()=>{\n      profile();\n    }, [])\n\n    const profile=()=>\n    {\n        debugger;\n        var helper = new XMLHttpRequest();\n        helper.onreadystatechange = () => {\n            if (helper.readyState == 4 &&\n                helper.status == 200) {\n                debugger;\n                var result = JSON.parse(helper.responseText);\n                    \n                // setMyquotes(result);\n            }\n        };\n        helper.open(\"GET\", `http://127.0.0.1:9999/quotes/${UserId}`);\n        helper.send();\n    }\n\n    return(<div className=\"mytable\">\n\n    <div className=\"form-group\">\n    <input type=\"number\"\n            className=\"form-control\" \n            name=\"Eno\"\n            placeholder=\"Enter Eno\"\n            value={props.emp.Eno}\n            onChange={props.OntextChange}/>\n    </div>\n\n    <div className=\"form-group\">\n    <input type=\"text\" \n            className=\"form-control\"\n            name=\"Eno\"\n            placeholder=\"Enter Eno\"\n            value={props.emp.Ename}\n            onChange={props.OntextChange}/>\n    </div>\n\n    <div className=\"form-group\">\n    <input type=\"text\" \n            className=\"form-control\"\n            name=\"Eaddress\"\n            placeholder=\"Enter Eno\"\n            value={props.emp.Eaddress}\n            onChange={props.OntextChange}/>\n    </div>\n    <button onClick={props.insert} className=\"btn btn-success\">\n        AddRecord\n    </button>\n    <button style={{margin:5}} onClick={props.update} className=\"btn btn-info\">\n        Update\n    </button>\n</div>)\n}\n\n export default MyProfile;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}