{"ast":null,"code":"var _jsxFileName = \"/home/pratik/Hackathon 2/client/demo/src/Quotes.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport QuoteRow from \"./QuoteRow\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quotes() {\n  _s();\n  const [quotes, setquotes] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    console.log(\"Inside COmponent Did Mount\");\n    selectTopic();\n  }, []);\n  const selectTopic = () => {\n    var helper = new XMLHttpRequest();\n    helper.onreadystatechange = () => {\n      if (helper.readyState == 4 && helper.status == 200) {\n        debugger;\n        var result = JSON.parse(helper.responseText);\n        var receivedQuotes = result;\n        // console.log(\"Setting Emps to Array received from reqres.in website..\");\n        setquotes(receivedQuotes);\n      }\n    };\n    helper.open(\"POST\", \"http://127.0.0.1:9999/users\");\n    helper.send();\n  };\n  const getQuotes = quote_id => {\n    debugger;\n    var helper = new XMLHttpRequest();\n    helper.onreadystatechange = () => {\n      if (helper.readyState == 4 && helper.status == 200) {\n        debugger;\n        history.push(\"/tutorials\");\n      }\n    };\n    helper.open(\"GET\", \"http://127.0.0.1:9999/users/\" + quote_id);\n    helper.setRequestHeader(\"Content-Type\", \"application/json\");\n    helper.send(JSON.stringify(quotes));\n  };\n  return /*#__PURE__*/_jsxDEV(\"center\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered myTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"center\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Quotes Around the World\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), quotes.map(quote => {\n            debugger;\n            {\n              return /*#__PURE__*/_jsxDEV(QuoteRow, {\n                quote: quote,\n                getQuotes: getQuotes\n              }, quotes.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 36\n              }, this);\n            }\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 13\n  }, this);\n}\n_s(Quotes, \"ESmx2r7hfS/nAeDmn2SanArs3BU=\", false, function () {\n  return [useHistory];\n});\n_c = Quotes;\nexport default Quotes;\nvar _c;\n$RefreshReg$(_c, \"Quotes\");","map":{"version":3,"names":["useState","useEffect","QuoteRow","useHistory","jsxDEV","_jsxDEV","Quotes","_s","quotes","setquotes","history","console","log","selectTopic","helper","XMLHttpRequest","onreadystatechange","readyState","status","result","JSON","parse","responseText","receivedQuotes","open","send","getQuotes","quote_id","push","setRequestHeader","stringify","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","quote","id","_c","$RefreshReg$"],"sources":["/home/pratik/Hackathon 2/client/demo/src/Quotes.js"],"sourcesContent":["import { useState ,useEffect} from \"react\";\nimport QuoteRow from \"./QuoteRow\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Quotes() {\n\n    const [quotes, setquotes] = useState([]);\n    const history = useHistory();\n\n    useEffect(()=>{\n        console.log(\"Inside COmponent Did Mount\");\n        selectTopic();\n    }, [])\n\n    const selectTopic = () => {\n        var helper = new XMLHttpRequest();\n        helper.onreadystatechange = () => {\n            if (helper.readyState == 4 && helper.status == 200) \n            {\n                debugger;\n                var result = JSON.parse(helper.responseText);\n                var receivedQuotes = result;\n                // console.log(\"Setting Emps to Array received from reqres.in website..\");\n                setquotes(receivedQuotes);\n            }\n        };\n        helper.open(\"POST\", \"http://127.0.0.1:9999/users\");\n        helper.send();\n    }\n\n    const getQuotes=(quote_id)=>\n    {\n        debugger;\n        var helper = new XMLHttpRequest();\n        helper.onreadystatechange = () => {\n            if (helper.readyState == 4 && helper.status == 200) {\n                debugger;\n                history.push(\"/tutorials\");\n            }\n        };\n        helper.open(\"GET\", \"http://127.0.0.1:9999/users/\"+quote_id);\n        helper.setRequestHeader(\"Content-Type\", \"application/json\")\n        helper.send(JSON.stringify(quotes));\n    }\n\n    return (<center>\n            <div>\n            <table className='table table-bordered myTable'>\n            <thead>\n                  <center> <h2>Quotes Around the World</h2></center>\n            </thead>\n           \n            <tbody>\n                <td></td>\n                {\n                    quotes.map((quote) => {\n                            debugger;\n                        {\n                            return <QuoteRow\n                                key={quotes.id}\n                                quote={quote}\n                                getQuotes={getQuotes}\n                                 />;\n                        }\n                    })\n                }\n            </tbody>\n        </table>\n    </div>\n    </center>);\n}\nexport default Quotes;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}